//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FinalSE.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FINAL_SEEntities : DbContext
    {
        public FINAL_SEEntities()
            : base("name=FINAL_SEEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<ACCOUNTANT> ACCOUNTANTs { get; set; }
        public virtual DbSet<AGENT> AGENTs { get; set; }
        public virtual DbSet<AGENT_ACCOUNT> AGENT_ACCOUNT { get; set; }
        public virtual DbSet<CUSTOMER> CUSTOMERs { get; set; }
        public virtual DbSet<CUSTOMER_ACCOUNT> CUSTOMER_ACCOUNT { get; set; }
        public virtual DbSet<GOOD_DELIVERY> GOOD_DELIVERY { get; set; }
        public virtual DbSet<INVOICE> INVOICEs { get; set; }
        public virtual DbSet<MOBILE_PRODUCT> MOBILE_PRODUCT { get; set; }
        public virtual DbSet<ORDER_LIST> ORDER_LIST { get; set; }
        public virtual DbSet<ORDER_LIST_DETAILS> ORDER_LIST_DETAILS { get; set; }
        public virtual DbSet<PAYMENT_METHOD> PAYMENT_METHOD { get; set; }
        public virtual DbSet<RECEIPT_DETAILS> RECEIPT_DETAILS { get; set; }
        public virtual DbSet<SUPPLIER> SUPPLIERs { get; set; }
        public virtual DbSet<TRANSACTION> TRANSACTIONs { get; set; }
        public virtual DbSet<TYPE_PRODUCT> TYPE_PRODUCT { get; set; }
        public virtual DbSet<WAREHOUSE_RECEIPT> WAREHOUSE_RECEIPT { get; set; }
    
        public virtual ObjectResult<checkExistedAgent_Result> checkExistedAgent(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<checkExistedAgent_Result>("checkExistedAgent", userParameter);
        }
    }
}
